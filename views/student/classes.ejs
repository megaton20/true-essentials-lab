<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Student Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/style.css">

  <!-- Bootstrap -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
    integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />

</head>

<body>

  <div class="container-fluid vh-100">
    <div class="row h-100">
      <!-- left side nav -->

      <%-include('./partials/sidenav')%>

        <div class=" border bg-white col-md-10">
          <a href="/user" class="mt-2">back</a>
          <!-- top info -->
          <div class="container  mb-2">
            <%- include('../partials/messages') %>
              <!-- top info ends -->
          </div>

          <div class="container">

            <section class="week-wraper mt-5">
              <p>Your History</p>
              <div class="row">
                <div class="col-md-8">

                        <div class="row">
                                  
                      <% sessions.forEach(function(data) {
                        const scheduled = new Date(data.scheduled_at);
                        const now = new Date();
                        const isToday = scheduled.toDateString() === now.toDateString();
                        const isFuture = scheduled > now;
                        const isPast = scheduled < now;

                        let statusText = '';
                        let statusClass = '';
                        let showJoin = false;
                        let showRejoin = false;

                        if (!data.status) {
                          statusText = 'Pending';
                          statusClass = 'bg-secondary';
                        } else if (data.is_joined && isToday) {
                          statusText = 'Attended';
                          statusClass = 'bg-success';
                          showRejoin = true;
                        } else if (!data.is_joined && isToday) {
                          statusText = 'Today';
                          statusClass = 'bg-primary';
                          showJoin = true;
                        } else if (!data.is_joined && isFuture) {
                          statusText = 'Upcoming';
                          statusClass = 'bg-info';
                        } else if (isPast) {
                          statusText = 'Closed Session';
                          statusClass = 'bg-danger';
                        }
                      %>

            <div class="col-md-3 mb-3">
              <div class="p-3 border rounded shadow-sm class-card d-flex flex-column justify-content-between">

                <!-- Top: Status -->
                <div class="d-flex justify-content-between mb-2">
                  <span class="badge <%= statusClass %>"><%= statusText %></span>
                </div>

                <!-- Middle: Title and Date -->
                <div class="mb-2">
                  <h6 class="mb-1 text-truncate" title="<%= data.title %>"><%= data.title %></h6>
                  <p class="text-muted small mb-0" style="font-size: 11px;">
                    <%= scheduled.toLocaleString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric',
                      hour: 'numeric',
                      minute: '2-digit'
                    }) %>
                  </p>
                </div>

                <!-- Bottom: Action -->
                <div>
                  <% if (showRejoin) { %>
                    <a href="/class/<%= data.join_code %>" class="btn btn-sm btn-outline-success">Rejoin</a>
                  <% } else if (showJoin) { %>
                    <a href="/class/<%= data.join_code %>" class="btn btn-sm btn-outline-primary">Join</a>
                  <% } %>
                </div>

              </div>
            </div>

          <% }) %>
        </div>

                </div>

                <div class="col-md-4 mb-5">
                  <div class=" rounded d-md-flex align-items-center justify-content-center bg-grad text-white p-5">
                    <div class="text-center">
                      <blockquote class="blockquote">
                        <p>"Knowledge is power. Information is liberating. Education is the premise of progress."</p>
                      </blockquote>
                      <footer class="blockquote-footer text-white-50 mt-3">â€” Kofi Annan</footer>
                    </div>
                  </div>
                </div>
              </div>

            </section>
          </div>


        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      const calendarHeader = document.getElementById('calendar-header');
      const calendarBody = document.getElementById('calendar-body');

      const now = new Date();
      const month = now.getMonth();
      const year = now.getFullYear();

      const monthNames = [
        'January', 'February', 'March', 'April', 'May', 'June',
        'July', 'August', 'September', 'October', 'November', 'December'
      ];

      function generateCalendar(month, year) {
        const firstDay = new Date(year, month, 1).getDay();
        const lastDate = new Date(year, month + 1, 0).getDate();
        const prevLastDate = new Date(year, month, 0).getDate();

        // Update header
        calendarHeader.innerHTML = `<h5 class="mb-0">${monthNames[month]} ${year}</h5>`;

        // Create weekday headers
        const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
        let daysHTML = '<div class="d-flex flex-wrap justify-content-center">';
        weekdays.forEach(day => {
          daysHTML += `<div class="day text-muted">${day}</div>`;
        });

        // Add previous month's trailing days
        for (let i = firstDay - 1; i >= 0; i--) {
          daysHTML += `<div class="day text-muted other-month">${prevLastDate - i}</div>`;
        }

        // Add current month's days
        for (let i = 1; i <= lastDate; i++) {
          const isToday = (i === now.getDate() && month === now.getMonth() && year === now.getFullYear());
          daysHTML += `<div class="day ${isToday ? 'today' : ''}">${i}</div>`;
        }

        // Add trailing next month's days to complete rows
        const totalCells = firstDay + lastDate;
        const nextDays = (7 - (totalCells % 7)) % 7;
        for (let i = 1; i <= nextDays; i++) {
          daysHTML += `<div class="day text-muted other-month">${i}</div>`;
        }

        daysHTML += '</div>';
        calendarBody.innerHTML = daysHTML;
      }

      generateCalendar(month, year);
    </script>

</body>

</html>